*gestalt file (.py)*

called by
  - graphics building script with args
  - shell with args(?)

loads
  - input file(s) (from args)

defines
  - all pixel mapping
  - may get pixel colour definitions from global constants
  - variations
	- colour variations
	- load sprites or other composites
	- show front wheels or paint out front wheels

calls
  - pixel generator(s)	
	- pass pixel sequences
	- pass block of pixels (spriterow for vehicles, arbitrary for buildings)
	- returned: block of pixels
  - compositor
	- composite according to rules (x,y of magic pixels; specified x,y)
	- pass block of pixels (spriterow for vehicles, arbitrary for buildings)
	- returned: block of pixels
  
writes
  - png files, either many, or one long spritesheet
  - names are by convention

---------------------------
gestalt implementation - tipper trailer

- create list for each cc variation
	- for each cargo: 
		- create empty spritesheet obj
		- render empty body, load states
		- comp into spritesheet obj using standard offsets  
	        - push to list for each cc variation

- for each spritesheet in each cc variation list
	- re-render each spritesheet in list to add / remove front wheels (duplicate)
	- save spritesheet per cargo, with variation suffix


  