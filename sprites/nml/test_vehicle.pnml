#define THIS_VEH_ID               veh_truck_test
#define THIS_NAME                 STR_VEH_NAME_TEST_VEHICLE // could be concatenated using CPP - in the item template? 
#define THIS_SPEED                48 km/h
#define THIS_POWER                120 hp
#define THIS_TE_COEFFICIENT       GLOBAL_DEFAULT_TE_COEFFICIENT
#define THIS_BUY_COST             10
#define THIS_RUN_COST             10
#define THIS_INTRO_DATE           date(1926,01,01)
#define THIS_MODEL_LIFE           100
// total capacity to be split over tractor / 1st trailer. Some fraction of capacity required for purposes of TE.
#define THIS_CAPACITY             20
// include trailer weight(s) as ottd trailing parts have weight=0. If number of trailers varies by subtype, define weight for each subtype.
#define THIS_WEIGHT               9.5 ton

#include "templates/refits/refits_default.tnml"

#define THIS_LENGTH  5 // length as fraction of 8; articulated trucks may be shorter than sprites so trailer overlaps  
spriteset(realsprites_veh_truck_test, "sprites/graphics/cabover_truck_test.png") {
  spriteset_template_truck_16(0, 20) // (search 'sprites/nml' to find where spriteset templates are defined)  
}

#define THIS_SG_ID   sg_veh_truck_test // ID will also be used for templated item block
spritegroup THIS_SG_ID {
    loaded:  [realsprites_veh_truck_test];
    loading: [realsprites_veh_truck_test];
}

// articulated cb is handled on a custom basis per truck; this is not wholly efficient, but I find it easier to work with
#define THIS_ARTICULATED_SWITCH_ID   switch_articulated_truck_test // ID will also be used for templated item block
switch (FEAT_ROADVEHS, SELF, THIS_ARTICULATED_SWITCH_ID, extra_callback_info1) {
    1: return veh_trailer_test;
    return 0xFF; //stop adding vehicle parts
}

#include "templates/template_articulated_truck_item.tnml"

#include "templates/template_clear_defines.tnml"
