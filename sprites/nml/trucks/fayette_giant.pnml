#define THIS_VEH_ID(...)          __VA_ARGS__ ## veh_rothrock // __VA_ARGS__ and ## allow for concatenating the veh ID with strings to construct further IDs
#define THIS_NAME                 THIS_VEH_ID(str_name_) // concatenated identifier using CPP 
#define THIS_SPEED                48 km/h
#define THIS_POWER                120 hp
#define THIS_TE_COEFFICIENT       GLOBAL_DEFAULT_TE_COEFFICIENT
#define THIS_SOUND_EFFECT         SOUND_TRUCK_START_2
#define THIS_SMOKE                VISUAL_EFFECT_DIESEL
#define THIS_SMOKE_OFFSET         -2
#define THIS_BUY_COST             10
#define THIS_RUN_COST             10
#define THIS_INTRO_DATE           date(1926,01,01)
#define THIS_MODEL_LIFE           100
#define THIS_CAPACITY             20 // capacity for tractor
#define THIS_WEIGHT               9.5 ton

 // use CPP to concatenate some identifiers from the vehicle ID and some strings
 // putting these on defines isnt strictly necessary; they could be concatenated inline, but this way helps my brain read other parts of the code
#define THIS_SG_ID   THIS_VEH_ID(sg_)
#define THIS_SS_ID   THIS_VEH_ID(ss_)

#include "../templates/refits/refits_default.tnml"  // predefined cargo refits. Multiple templates available for different vehicle types.

#define THIS_LENGTH  SHORTEN_TO_2_8 // 1 unit = 4px; fifth-wheel articulated trucks may be shorter than their sprites so trailer overlaps  
spriteset(THIS_SS_ID, "sprites/graphics/cabover_truck_test.png") {
  spriteset_template_truck_16(0, 20) // (search 'sprites/nml' to find where spriteset templates are defined)  
}

spritegroup THIS_SG_ID {
    loaded:  [THIS_SS_ID];
    loading: [THIS_SS_ID];
}

#include "../templates/template_rigid_truck_item.tnml"

#include "../templates/template_clear_defines.tnml"
