<tal:truck define="properties vehicle.properties">
// -- begin ${properties.title} --

// some of the CAPS identifiers used are NML built-ins, some are still defined by CPP (legacy).  No easy way to tell except by searching...

spriteset(${vehicle.id}_ss, "sprites/graphics/${properties.truck_graphics_file}") {
  spriteset_template_truck_16(0, 20) // (search 'sprites/nml' to find where spriteset templates are defined)  
}

spritegroup ${vehicle.id}_sg {
    loaded:  ${vehicle.id}_ss;
    loading: ${vehicle.id}_ss;
}

<tal:check_for_trailers condition="python:hasattr(vehicle,'trailers')">
  <tal:build_trailers repeat="trailer vehicle.trailers">
    //-- provide ${trailer.id} --
    // ${trailer.render()}
  </tal:build_trailers>
</tal:check_for_trailers>


item(FEAT_ROADVEHS, ${vehicle.id}, ${properties.numeric_ID}) {
    property {
        name:                           string(str_name_${vehicle.id});
        climates_available:             ALL_CLIMATES; // nml constant
        sound_effect:                   SOUND_TRUCK_START_2; //nml constant - likely this will be replaced by python global vars  
        visual_effect:                  visual_effect(VISUAL_EFFECT_DIESEL, ${properties.truck_smoke_offset}); // nml constant for DIESEL
        introduction_date:              ${properties.truck_intro_date};
        cargo_capacity:                 ${properties.truck_capacity};
        sprite_id:                      SPRITE_ID_NEW_ROADVEH; //enable new graphics - nml constant
        speed:                          ${properties.truck_speed}mph;
        power:                          ${properties.truck_power}hp;
        weight:                         ${properties.truck_weight};
        tractive_effort_coefficient:    GLOBAL_DEFAULT_TE_COEFFICIENT; // cpp constant - may need to vary per truck
        cost_factor:                    ${properties.truck_buy_cost};
        running_cost_factor:            ${properties.truck_run_cost};
        refittable_cargo_classes:       bitmask(THIS_ALLOWED_CARGO_CLASSES); // cpp constant
        non_refittable_cargo_classes:   bitmask(THIS_DISALLOWED_CARGO_CLASSES); // cpp constant
        cargo_allow_refit:              [THIS_ALLOWED_CARGOS]; // cpp constant
        cargo_disallow_refit:           [THIS_DISALLOWED_CARGOS]; //cpp constant
        misc_flags:                     bitmask(ROADVEH_FLAG_2CC, ROADVEH_FLAG_AUTOREFIT); // nml constants
        model_life:                     ${properties.truck_model_life};
        vehicle_life:                   ${properties.truck_vehicle_life};
    }
    graphics {
        shorten_vehicle:                ${properties.truck_length};
        purchase_cargo_capacity:        ${properties.total_capacity};
        default:                        ${vehicle.id}_sg;
    }
}


// -- end ${properties.title} --
</tal:truck>